# .github/workflows/android-release.yml

name: Android CI/CD

# 触发条件
on:
  # 1. 在创建新的 Release 时触发
  release:
    types: [created]

  # 2. 允许在 Actions 页面手动触发
  workflow_dispatch:

jobs:
  build:
    name: Build Release APK
    runs-on: ubuntu-latest

    steps:
      # 步骤 1: 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤 2: 设置 JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      # 步骤 3: 授权 Gradle Wrapper
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 步骤 4: 编译 Release APK (此步骤对于两种触发方式都相同)
      - name: Build with Gradle
        run: ./gradlew assembleRelease
        
      - name: List files in outputs directory
        run: ls -R ./app/build/outputs/
  
      # 步骤 5: [条件性上传] 如果是 Release 触发，则上传到 Release Assets
      # 仅当触发事件是 'release' 时，此步骤才会执行
      - name: Upload APK to Release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./app/build/outputs/apk/release/app-release.apk
          # 使用 Release 的标签名（版本号）来命名文件
          asset_name: YourAppName-v${{ github.ref_name }}.apk
          asset_content_type: application/vnd.android.package-archive

      # 步骤 6: [条件性上传] 如果是手动触发，则上传到 Action Artifacts
      # 仅当触发事件是 'workflow_dispatch' 时，此步骤才会执行
      - name: Upload APK to Action Artifacts
        if: github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          # Artifact 的名称，会显示在下载区域
          name: release-apk
          # 要上传的文件的路径
          path: ./app/build/outputs/apk/release/app-release.apk